<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wHhgPDP42JjhgAAAABJRU5ErkJggg==
</value>
  </data>
</root>