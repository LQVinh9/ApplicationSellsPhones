<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>